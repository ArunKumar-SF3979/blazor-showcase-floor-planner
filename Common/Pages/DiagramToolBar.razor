@using Syncfusion.Blazor.Navigations
@using Syncfusion.Blazor.Buttons
@using Syncfusion.Blazor.SplitButtons
@using Syncfusion.Blazor.DropDowns
@using Syncfusion.Blazor.Inputs
@using FloorPlanner.Shared

@namespace FloorPlanner

<style>

   /* #btnDrawConnector {
        width: 45px !important;
        height :33px;
        padding: 0px 0px 0px 0px;
    }*/
    #toolbarEditor .e-hscroll-bar{
        overflow-x: initial !important;
    }

    #btnZoomIncrement {
        width: 64px;
        padding: 0px;
        line-height: 28px;
        font-size: 12px;
        text-indent: 3px;
        color: #323130;
    }
    .activecss {
        background: #ffffff;
    }
   .e-dropdown-popup {
        background-color: #fff;
        color: #111827;
    }

    #btnHideProperty {
        width: 28px;
        height: 28px;
        margin-left: 30px;
        margin-bottom: 7px;
    }
</style>
<div class='db-toolbar-editor'>
    <div class='@toolbarClassName'>
        <div ID="toolbarEditor" class="e-control e-toolbar e-lib e-keyboard" style="display:@DiagramToolbarVisibility;height:auto;width:100%">
            <SfToolbar OverflowMode="@OverflowMode.Scrollable" Width="100%"> 
                <ToolbarEvents Clicked="@ToolbarEditorClick"></ToolbarEvents>
                <ToolbarItems>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-Undo tb-icons" TooltipText="Undo" CssClass="tb-item-end tb-item-undo"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-Redo tb-icons" TooltipText="Redo" CssClass="tb-item-end tb-item-redo"></ToolbarItem>
                    <ToolbarItem Type="@ItemType.Separator"></ToolbarItem>                    
                    <ToolbarItem PrefixIcon="e-icons sf-icon-Pan tb-icons" TooltipText="Pan Tool" CssClass="@PanItemCssClass"></ToolbarItem>
                    <ToolbarItem PrefixIcon="e-icons sf-icon-Selector tb-icons" TooltipText="Pointer" CssClass="@PointerItemCssClass"></ToolbarItem>
                    <ToolbarItem PrefixIcon="e-icons sf-icon-StraightLine tb-icons" TooltipText="Straight" CssClass="@DrawConnectorItemCssClass"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="sf-icon-TextInput tb-icons e-icons" TooltipText="Text Tool" CssClass="@TextItemCssClass"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="@GroupIcon" TooltipText="@GroupToolTip" CssClass="tb-item-start tb-item-align-category" Visible="@ShowGroup" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem Type="@ItemType.Separator" Visible="@ShowGroupSeparator" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-AlignLeft tb-icons" TooltipText="Align Left" CssClass="tb-item-start tb-item-align-category" Visible="@ShowAlignLeft" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-AlignHorizontally tb-icons" TooltipText="Align Center" CssClass="tb-item-middle tb-item-align-category" Visible="@ShowAlignCenter" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-AlignRight tb-icons" TooltipText="Align Right" CssClass="tb-item-middle tb-item-align-category" Visible="@ShowAlignRight" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-AilgnTop tb-icons" TooltipText="Align Top" CssClass="tb-item-middle tb-item-align-category" Visible="@ShowAlignTop" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-AlignVertically tb-icons" TooltipText="Align Middle" CssClass="tb-item-middle tb-item-align-category" Visible="@ShowAlignMiddle" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem PrefixIcon="e-icons sf-icon-AlignBottom tb-icons" TooltipText="Align Bottom" CssClass="tb-item-middle tb-item-align-category" Visible="@ShowAlignBottom" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-DistributeHorizontal tb-icons" TooltipText="Distribute Objects Vertically" CssClass="tb-item-middle tb-item-space-category" Visible="@ShowAlignVertical" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-DistributeVertical tb-icons" TooltipText="Distribute Objects Horizontally" CssClass="tb-item-end tb-item-space-category" Visible="@ShowAlignHorizontal" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem Type="@ItemType.Separator" Visible="@ShowAlignSeparator" Align="ItemAlign.Center"></ToolbarItem>                  
                   <ToolbarItem  PrefixIcon="e-icons sf-icon-BringForward tb-icons" TooltipText="Bring Forward" CssClass="tb-item-end tb-item-order" Visible="@ShowBringForward" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-BringFront tb-icons" TooltipText="Bring To Front" CssClass="tb-item-end tb-item-order" Visible="@ShowBringToFront" Align="ItemAlign.Center"></ToolbarItem>
                     <ToolbarItem  PrefixIcon="e-icons sf-icon-SendBackward tb-icons" TooltipText="Send Backward" CssClass="tb-item-end tb-item-order" Visible="@ShowSendBackward" Align="ItemAlign.Center"></ToolbarItem>
                     <ToolbarItem PrefixIcon="e-icons sf-icon-Sendback tb-icons" TooltipText="Send To Back" CssClass="tb-item-end tb-item-order" Visible="@ShowSendToBack" Align="ItemAlign.Center"></ToolbarItem>               
                    <ToolbarItem Type="@ItemType.Separator" Visible="@ShowOrderSeparator" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem PrefixIcon="e-icons sf-icon-flip-horizontal tb-icons" TooltipText="Horizontal Flip" CssClass="tb-item-end tb-item-order" Visible="@ShowHorizontalFlip" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem PrefixIcon="e-icons sf-icon-flip-vertical tb-icons" TooltipText="Vertical Flip" CssClass="tb-item-end tb-item-order" Visible="@ShowVerticalFlip" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem Type="@ItemType.Separator" Visible="@ShowOrderSeparator" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="@LockIcon" TooltipText="@LockToolTip" CssClass="tb-item-start tb-item-lock-category" Visible="@ShowLock" Align="ItemAlign.Center"></ToolbarItem>
                    <ToolbarItem  PrefixIcon="e-icons sf-icon-Delete tb-icons" TooltipText="Delete" CssClass="tb-item-end tb-item-lock-category" Visible="@ShowDelete" Align="ItemAlign.Center"></ToolbarItem>                    
                    <ToolbarItem  PrefixIcon="e-icons tb-item-end tb-zoom-dropdown-btn" Id="ZoomPanel" Align="ItemAlign.Right" Visible= "@ZoomItemVisibility">
                        <Template>
                            <SfDropDownButton ID="btnZoomIncrement"  Content="@ZoomItemDropdownContent" CssClass="e-zoomoption e-dropdown-custom">
                                <DropDownButtonEvents ItemSelected="@DrawZoomChange"></DropDownButtonEvents>
                                <DropDownMenuItems>
                                    <DropDownMenuItem Text="Zoom In"></DropDownMenuItem>
                                    <DropDownMenuItem Text="Zoom Out"></DropDownMenuItem>
                                    <DropDownMenuItem Text="Zoom to Fit"></DropDownMenuItem>
                                    <DropDownMenuItem Text="Zoom to 50%"></DropDownMenuItem>
                                    <DropDownMenuItem Text="Zoom to 100%"></DropDownMenuItem>
                                    <DropDownMenuItem Text="Zoom to 200%"></DropDownMenuItem>
                                </DropDownMenuItems>
                            </SfDropDownButton>                          
                        </Template>
                    </ToolbarItem>
                    <ToolbarItem Align="ItemAlign.Right" Visible="@HideItemVisibility">
                        <Template>
                            <div class=@HideButtonCss  title="Hide/Show property">
                                <SfButton CssClass="e-primary" ID="btnHideProperty" IconCss="sf-icon-properties tb-hide-button tb-icons e-primary" OnClick="@HidePropertyContainer"></SfButton>
                            </div>
                        </Template>
                    </ToolbarItem>
                </ToolbarItems>
            </SfToolbar>
        </div>   
    </div>   
</div>

@code {
    
    public DiagramMain? Parent { get; set; }

    /// <summary>
    /// Gets or sets the visibility of the diagram toolbar.
    /// </summary>
    public string DiagramToolbarVisibility { get; set; } = "block";    

    /// <summary>
    /// To enable/disable the hide/show property panel button in the toolbar
    /// </summary>
    string HideButtonCss = "db-toolbar-hide-btn tb-property-open";
   
    /// <summary>
    /// Gets or sets the CSS class name applied to the toolbar.
    /// </summary>
    string toolbarClassName { get; set; } = "db-toolbar-container";    

    /// <summary>
    /// Sets the content to be displayed in the zoom item dropdown
    /// </summary>
    public string ZoomItemDropdownContent = "100%";

    /// <summary>
    /// Gets or sets the zoom item visibility in the toolbar
    /// </summary>
    public bool ZoomItemVisibility = false;

    /// <summary>
    /// Gets or sets the hide item visibility in the toolbar
    /// </summary>
    public bool HideItemVisibility = false;    

    /// <summary>
    /// Gets or sets the CSS class name applied to the pan tool item in the diagram toolbar.
    /// </summary>
    public string PanItemCssClass = "tb-item-start tb-item-pan";

    /// <summary>
    /// Gets or sets the CSS class name applied to the connector mode item in the diagram toolbar.
    /// </summary>
    public string ConnectorModeItemCssClass = "sf-icon-ConnectorMode";

    /// <summary>
    /// Gets or sets the CSS class name applied to the fill property.
    /// </summary>
    string fill { get; set; } = "tb-item-start tb-item-fill";

    /// <summary>
    /// Gets or sets the CSS class name applied to the stroke property.
    /// </summary>
    string stroke { get; set; } = "tb-item-end tb-item-stroke";

    /// <summary>
    /// Reference to the connector item in the toolbar
    /// </summary>  
    string ConnectorItem = "e-dropdown-custom";

    /// <summary>
    /// Gets or sets the CSS class name applied to the pointer tool item in the diagram toolbar.
    /// </summary>
    public string PointerItemCssClass = "tb-item-middle tb-item-selected tb-item-pointer";  

    /// <summary>
    /// Gets or sets the CSS class name applied to the draw connector tool item in the diagram toolbar.
    /// </summary>
    string DrawConnectorItemCssClass = "tb-item-middle tb-drawtools-dropdown-btn tb-custom-diagram-disable";  

    /// <summary>
    /// Gets or sets the CSS class name applied to the text item in the diagram toolbar.
    /// </summary>
    string TextItemCssClass = "tb-item-end tb-drawtools-text tb-custom-diagram-disable";

    /// <summary>
    /// Gets or sets the CSS class name applied to the group icon item in the diagram toolbar.
    /// </summary>
    public string GroupIcon = "e-icons sf-icon-Group tb-icons";

    /// <summary>
    /// Gets or sets the tooltip to the group/ungroup icon
    /// </summary>
    public string GroupToolTip = "Group";

    /// <summary>
    /// Gets or sets the CSS class name applied to the lock icon item in the diagram toolbar.
    /// </summary>
    string LockIcon = "e-icons sf-icon-Unlock tb-icons";

    /// <summary>
    /// Gets or sets the tooltip to lock item in the toolbar
    /// </summary>
    string LockToolTip = "Lock";

    /// <summary>
    /// Gets or sets fill color to the node.
    /// </summary>
    public string NodeFillColor { get; set; } = "";

    /// <summary>
    /// Gets or sets a value indicating whether to show the group icon in the toolbar.
    /// </summary>
    public bool ShowGroup { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the ungroup icon in the toolbar.
    /// </summary>
    public bool ShowUnGroup { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the group seperator icon in the toolbar.
    /// </summary>
    public bool ShowGroupSeparator { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align left icon in the toolbar.
    /// </summary>
    public bool ShowAlignLeft { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align centre icon in the toolbar.
    /// </summary>
    public bool ShowAlignCenter { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align right icon in the toolbar.
    /// </summary>
    public bool ShowAlignRight { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align top icon in the toolbar.
    /// </summary>
    public bool ShowAlignTop { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align middle icon in the toolbar.
    /// </summary>
    public bool ShowAlignMiddle { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align bottom icon in the toolbar.
    /// </summary>
    public bool ShowAlignBottom { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align vertical icon in the toolbar.
    /// </summary>
    public bool ShowAlignVertical { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align horizontal icon in the toolbar.
    /// </summary>
    public bool ShowAlignHorizontal { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the align seperator icon in the toolbar.
    /// </summary>
    public bool ShowAlignSeparator { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the fill icon in the toolbar.
    /// </summary>
    public bool ShowFill { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the stroke icon in the toolbar.
    /// </summary>
    public bool ShowStroke { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the style seperator icon in the toolbar.
    /// </summary>
    public bool ShowStyleSeparator { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the order icon in the toolbar.
    /// </summary>
    public bool ShowOrder { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the order seperator icon in the toolbar.
    /// </summary>
    public bool ShowOrderSeparator { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the lock icon in the toolbar.
    /// </summary>
    public bool ShowLock { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the delete icon in the toolbar.
    /// </summary>
    public bool ShowDelete { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the send to back icon in the toolbar.
    /// </summary>
    public bool ShowSendToBack { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the bring to front icon in the toolbar.
    /// </summary>
    public bool ShowBringToFront { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the send backward icon in the toolbar.
    /// </summary>
    public bool ShowSendBackward { get; set; } = false;

    /// Gets or sets a value indicating whether to show the bring forward icon in the toolbar.
    /// </summary>
    public bool ShowBringForward { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the horizontal flip forward icon in the toolbar.
    /// </summary>
    public bool ShowHorizontalFlip { get; set; } = false;

    /// <summary>
    /// Gets or sets a value indicating whether to show the veertical flip icon in the toolbar.
    /// </summary>
    public bool ShowVerticalFlip { get; set; } = false;

    protected override void OnAfterRender(bool firstRender)
    {
        ZoomItemDropdownContent = FormattableString.Invariant($"{Math.Round(Parent.DiagramContent.CurrentZoom * 100)}") + "%";
        base.OnAfterRender(firstRender);
    }  

    public void StateChanged()
    {
        StateHasChanged();
    }

    protected override bool ShouldRender()
    {
        return true;       
    }
}
